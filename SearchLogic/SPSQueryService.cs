//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 1.1.4322.573.
// 
namespace SearchTest.SPSQueryService {
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QueryServiceSoap", Namespace="http://microsoft.com/webservices/SharePointPortalServer/WebQueryService")]
    public class QueryService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public QueryService() {
            string urlSetting = System.Configuration.ConfigurationSettings.AppSettings["SearchTest.SPSQueryService.QueryService"];
            if ((urlSetting != null)) {
                this.Url = string.Concat(urlSetting, "");
            }
            else {
                this.Url = "";
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Microsoft.Search/Query", RequestNamespace="urn:Microsoft.Search", ResponseNamespace="urn:Microsoft.Search", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Query(string queryXml) {
            object[] results = this.Invoke("Query", new object[] {
                        queryXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQuery(string queryXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Query", new object[] {
                        queryXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndQuery(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Microsoft.Search/Registration", RequestNamespace="urn:Microsoft.Search", ResponseNamespace="urn:Microsoft.Search", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Registration(string registrationXml) {
            object[] results = this.Invoke("Registration", new object[] {
                        registrationXml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRegistration(string registrationXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Registration", new object[] {
                        registrationXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRegistration(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:Microsoft.Search/Status", RequestNamespace="urn:Microsoft.Search", ResponseNamespace="urn:Microsoft.Search", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Status() {
            object[] results = this.Invoke("Status", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginStatus(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Status", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/WebQueryService/GetPortal" +
"SearchInfo", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/WebQueryService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/WebQueryService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPortalSearchInfo() {
            object[] results = this.Invoke("GetPortalSearchInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPortalSearchInfo(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPortalSearchInfo", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetPortalSearchInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/SharePointPortalServer/WebQueryService/QueryEx", RequestNamespace="http://microsoft.com/webservices/SharePointPortalServer/WebQueryService", ResponseNamespace="http://microsoft.com/webservices/SharePointPortalServer/WebQueryService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet QueryEx(string queryXml) {
            object[] results = this.Invoke("QueryEx", new object[] {
                        queryXml});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginQueryEx(string queryXml, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("QueryEx", new object[] {
                        queryXml}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndQueryEx(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
    }
}
